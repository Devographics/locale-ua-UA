locale: ua-UA
translations:
  ###########################################################################
  # General
  ###########################################################################

  - key: general.results.description
    t: Щорічне опитування про останні тенденції в екосистемі React за 2023 рік.

  ###########################################################################
  # Introduction
  ###########################################################################

  - key: introduction.react2023
    t: |

      <span class="first-letter">R</span>eact з нами вже 11 років, що навіть важко уявити, озираючись на поточний темп веброзробки. 

      Причина, з якої ми все ще говоримо про React сьогодні, полягає в тому, що він якось зміг не відставати, постійно розвиваючись, щоб відповідати кинутим його користувачами викликам. 

      Направду, React не задовольняється тим, що не відстає, — прокладає шлях із новими інноваційними концептами, як-от серверні компоненти та майбутній компілятор. 

      Крім цього, зауважте: ці дані були зібрані в період із **27 жовтня** до **15 листопада 2023 року**, тобто не було охоплено React 19, як і будь-які інші розробки після цього періоду. 

      Незважаючи на це, тут можна ще багато чого дослідити — від бібліотек компонентів до методів управління станом і патернів застосунків. Тож давайте разом дізнаємось про результати першого в історії опитування спільноти React! 

      *Це не офіційне опитування, яке не пов'язане з Meta, Vercel або командою React.* 

      <span class="conclusion__byline">– Sacha Greif</span>

  ###########################################################################
  # Tshirt
  ###########################################################################

  - key: sections.tshirt.title
    t: Футболка

  - key: sections.tshirt.description
    t: |
      ## Підтримайте опитування за допомогою офіційної футболки "Стан React"

      Це бібліотека? Фреймворк? Невідомий елемент на межі перетворення в небезпечну, нестабільну сутність? Якими б не були ваші почуття щодо React, ви знайдете їх відображення в цьому дизайні, який перегукується з аніме та науковою фантастикою.

  - key: tshirt.about
    t: Про футболку

  - key: tshirt.description
    t: |
      Ми використовуємо високоякісну футболку, надруковану нашими партнерами з Cotton Bureau.

  - key: tshirt.getit
    t: Отримати

  - key: tshirt.price
    t: USD $32 + доставляння

  - key: tshirt.designer.heading
    t: Про дизайнера

  - key: tshirt.designer.name
    t: Christopher Kirk-Nielsen

  - key: tshirt.designer.bio
    t: |
      Chris родом із Франції, але тепер проживає у Сполучених Штатах; він не лише чудовий розробник клієнтської частини, а й талановитий ілюстратор, який спеціалізується на зображеннях у стилі ретро. Ми радимо вам переглянути [інші дизайни його футболок](https://chriskirknielsen.com/designs)!

  ###########################################################################
  # Content
  ###########################################################################

  # user_info

  - key: sections.user_info.description.react2023
    t: |
      **13 003** респондентів взяли участь у першій в історії хвилі опитування "Стан React". Звісно, це не численна вибірка загальної спільноти, але все ж достатньо велика, щоб надати нам цінні дані!

  - key: user_info.country.takeaway
    t: |
      Більшість респондентів родом із **США** та **Європи**.

  - key: user_info.locale.takeaway
    aliasFor: user_info.locale.description

  - key: user_info.completion_stats.takeaway
    aliasFor: user_info.completion_stats.description

  # features

  - key: sections.features.description.react2023
    t: |
      Ми запитали в респондентів їхню думку щодо **28** окремих функцій — від найпоширеніших хуків, як `useState`, до більш нішевих API, як `useDeferredValue`. Й обов'язково спробуйте відсортувати дані за "ставленням"!

  - key: features.all_features
    t: Усі функції

  - key: features.all_features.takeaway
    t: |
      Ця діаграма підсумовує всі запитання опитування щодо функцій. Основні стовпці відповідають досвіду використання респондентом; далі вони поділяються відповідно до ставлення цього респондента. Ви можете змінити групування, щоб чергувати ці варіанти розбиття.

  - key: features.reading_list.takeaway
    t: >
      **30%** респондентів під час опитування додали принаймні один елемент до свого списку читання, щоб дізнатися про нього більше. Ось розбиття їхнього вибору.

  - key: features.main_apis_items
    t: Досвід використання і ставлення до основних API
  - key: features.main_apis_pain_points.takeaway
    t: >
      З-поміж найпоширеніших API React-у найбільше страждань розробникам завдали `forwardRef` і `memo`. На щастя, команда React наразі запускає кращі альтернативи обом.

  - key: features.hooks_items
    t: Досвід використання і ставлення до хуків
  - key: features.hooks_pain_points.takeaway
    t: >
      Не дивно, що `useEffect` і `useCallback` згадувалися як найпроблемніші хуки React — значною мірою через керування масивами залежностей.

  - key: features.new_apis_items
    t: Досвід використання і ставлення до нових API
  - key: features.new_apis_pain_points.takeaway
    t: >
      Хоч здатність React розвиватися та залишатися актуальним із часом — одна з його найконкурентніших переваг, проте це також має свою ціну, адже нові API, як-от **серверні компоненти**, безумовно, можуть достатньо важко впроваджуватися.

  # libraries

  - key: sections.libraries.description.react2023
    t: |
      Ми переробили наші діаграми, щоб підкреслити не лише досвід розробників, але і *ставлення*. Обов'язково вивчіть ці нові параметри групування та сортування, щоб з'ясувати, які бібліотеки приваблюють найбільше… або найменше!

  - key: tools.all_tools_experience
    t: Досвід використання і ставлення до бібліотек
  - key: tools.all_tools_experience.takeaway
    t: >
      Що з-поміж цих бібліотек і фреймворків React **Next.js** і **TanStack Query** на перших позиціях за позитивним ставленням загалом.

      Зауважте, що деякі пункти, як-от `useState` і `fetch`, також були додані, щоб продемонструвати базовий рівень, хоч вони самі не є бібліотеками.

  - key: tools.scatterplot_overview
    t: Утримання та використання бібліотек
  - key: tools.scatterplot_overview.takeaway
    t: >
      З-поміж бібліотек і фреймворків **Next.js** єдиний, що може похизуватися як високим рівнем утримання, так і високим рівнем використання. З іншого боку, хоч було ще більше респондентів, які використовували **Create React App**, проте набагато менше тих, хто бажав би використовувати його надалі.

  # component libraries

  - key: tools.component_libraries_experience
    t: Досвід використання і ставлення до бібліотек компонентів
  - key: tools.component_libraries_experience.takeaway
    t: >
      **React Aria** і **Radix** — найперші у рейтингу за позитивним ставленням, доводячи, що створення бібліотек доступних, легких компонентів без стилів (headless approach) має багато переваг.

  # state management

  - key: tools.state_management_experience
    t: Досвід використання і ставлення до управління станом
  - key: tools.state_management_experience.takeaway
    t: >
      Окрім **useState**, інструментом для управління станом із найвищим коефіцієнтом позитивного ставлення став **Zustand**. І хоч **Redux** все ще може пишатися великою кількістю користувачів, та він вже не такий улюблений.

  # data loading

  - key: tools.data_loading_experience
    t: Досвід використання і ставлення до завантаження даних
  - key: tools.data_loading_experience.takeaway
    t: >
      **TanStack Query** вже був відомий деякий час, і виявилося, що його репутація також відображена в даних, оскільки саме цей інструмент для завантаження даних найкраще сприйнятий респондентами, одразу після нативного API `fetch`.

  # back-end infrastructure

  - key: tools.meta_frameworks_experience
    t: Досвід використання і ставлення до метафреймворків
  - key: tools.meta_frameworks_experience.takeaway
    t: >
      Хоч вам, безперечно, не становитиме труднощів знайти людей, які скаржаться на **Next.js**, та він все ж таки зміг очолити рейтинг позитивного ставлення для метафреймворків — разом із **Remix** і **Astro**.

  #other_tools

  - key: sections.other_tools.description.react2023
    t: |
      React відомий тим, що зосереджується саме на рендерингу UI, водночас майже не впливаючи на інші частини вашого застосунку — це відображено в живій екосистемі, яка виникла, щоб заповнити ці прогалини!

  # usage

  - key: sections.usage.description.react2023
    t: |
      Незалежно від використовуваної версії, впровадженого патерну застосунку або вашої галузі діяльності — немає неправильного способу використання React!

  - key: usage.js_app_patterns.takeaway
    t: >
      Незважаючи на зміну фокуса на генерацію статичних сайтів, рендеринг з боку сервера та серверні компоненти, варто зазначити, що переважна більшість користувачів React все ще працюють з односторінковими застосунками (SPA).

  - key: usage.react_version.takeaway
    t: >
      Зауважте, що опитування було проведено **до** анонсу або випуску React 19.

  # resources

  - key: sections.resources.description.react2023
    t: |
      Одна з головних причин тривалого домінування React — величезна кількість документації, публікацій у блогах, відео та інших джерел, накопичених протягом багатьох років. Ось лише маленький приклад!

  - key: resources.learning_methods.takeaway
    t: |
      Команда React чудово попрацювала над новим сайтом документації React, тож не варто дивуватися, що це найперший спосіб вивчення фреймворку.

  - key: resources.blogs_news_magazines.takeaway
    t: |
      Незважаючи на те що цей список заповнений багатьма звичними "підозрюваними", варто відзначити присутність медіа, які стосуються саме React, як-от **This Week in React** або **React Status**.

  - key: resources.sites_courses.takeaway
    t: |
      Хоч **Stack Overflow** нещодавно зіткнувся з проблемами, пов'язаними зі штучним інтелектом, він все ще очолює рейтинг.

  - key: resources.podcasts.takeaway
    t: |
      **Syntax** продовжує своє домінування серед подкастів для розробників. Також варто зазначити відсутність будь-якого активного подкасту саме про React на перших 10 позиціях.

  - key: resources.video_creators.takeaway
    t: |
      Хоч **Theo** і **Web Dev Simplified** створювали відео про React, хотілося б значити, що **The Primeagen** все одно посів третє місце, незважаючи на те, що він зазвичай не фокусується на ньому.

  - key: resources.people.takeaway
    t: |
      Коли йдеться про впливову особистість у спільноті React, не дивно, що **Dan Abramov** очолює рейтинг, проте **Kent C. Dodds** і **Theo**, здається, також змагаються за корону.

  #awards
  # - key: sections.awards.description.react2023
  #   t: |
  #     This year's awards were dominated by one very specific project… how quickly will you guess what it is?

  ###########################################################################
  # Charts
  ###########################################################################

  - key: options.features_categories.language
    aliasFor: sections.language.title
  - key: options.features_categories.browser_apis
    aliasFor: sections.browser_apis.title
  - key: options.features_categories.other_features
    aliasFor: sections.other_features.title

  ###########################################################################
  # Notes
  ###########################################################################

  - key: blocks.gender.note
    t: |
      Якщо ви хочете дізнатися більше, ми [написали статтю](https://dev.to/sachagreif/is-our-survey-biased-against-women-49oj), у якій йдеться про гендерну динаміку опитування.

  - key: blocks.source.note
    t: >

      Ця діаграма зібрана із джерел переходу (referrers), параметрів URL та відповідей довільної форми. 

      - Стан JS: список розсилання електронною поштою про ["Стан JS"](https://stateofjs.com). 

      - Стан CSS: список розсилання електронною поштою про ["Стан CSS"]; тексти з відповідниками `email`, `by email` тощо. 

      - Робота: тексти з відповідниками `work`, `colleagues`, `coworkers` тощо.

  ###########################################################################
  # Awards
  ###########################################################################

  # - key: award.feature_adoption_delta_award.comment
  #   t: With a **{value}** progression in 2022, **top-level await** has quickly become an integral part of JavaScript.

  # - key: award.tool_usage_delta_award.comment
  #   t: |
  #     **Vite** continues to be the fastest-growing library out there, with a **{value}** year-over-year increase in usage!

  # - key: award.tool_satisfaction_award.comment
  #   t: Vite once again takes the top spot, with **{value}** of developers willing to use it again!

  # - key: award.tool_interest_award.comment
  #   t: Did you guess Vite? Close, but this year **Vitest** is the technology developers are most interested in with a **{value}** interest ratio.

  # - key: award.most_write_ins_award.comment
  #   t: With **{value}** mentions, **Bun** was the most mentioned technology overall in freeform questions.

  # - key: award.most_commented_tool_award.comment
  #   t: With **{value}** comments, React showed that it's once again the most-discussed library around.

  # - key: award.most_loved_tool_award.comment
  #   t: With **{value}** of all developers having a positive opinion of it, Vite concludes its sweep of these awards by being the most-loved technology around!

  ###########################################################################
  # Conclusion
  ###########################################################################

  - key: conclusion.react2023.josh_comeau
    t: |

      <span class="first-line">Який рік!</span>

      З появою серверних компонентів React, я б сказав, що це був найбільший рік для React із 2018-го, коли з'явилися React-хуки.

      За 5 років, починаючи з 2018 року, хуки досягли надзвичайного поширення. Величезні 99,5% респондентів опитування впровадили використання `useState`, і менше ніж 2% незадоволені ним. Класові компоненти все ще існують, але їх понижено до застарілих кодових баз і випадкового компонента для запобігання помилок.

      Але мені цікаво… Чи всі ми будемо використовувати серверні компоненти через 5 років після їх випуску, у 2028-му? Я не дуже впевнений у цьому. Парадигма серверних компонентів вимагає глибокої інтеграції із бандлером і роутером. І це не те, що більшість розробників можуть поступово додавати до свого поточного React-коду.

      Розробники React полюбляють бути обізнаними; 71% респондентів відповіли, що вони використовують React 18 — найновішу версію, доступну на момент збору цих даних. Водночас найпоширенішим середовищем React досі залишається Create React App, незважаючи на те, що воно офіційно застаріло та не оновлювалося з квітня 2022 року. Ми з радістю оновимо React, коли з'явиться нова версія, але ми не змінимо середовище; 37% респондентів ніколи навіть не користувалися SSR (рендерингом із боку сервера), хоч це доступно вже більше десяти років!

      Якби мені довелося вгадувати, я б сказав, що в 2028 році широко розповсюдженими будуть два React-и з приблизно однаковою часткою використання. Версія "повного стеку" із серверними компонентами та серверними діями і версія клієнтських односторінкових застосунків.

      Ми живемо у часи змін! І я вже хочу побачити, як React та його екосистема розвиватимуться протягом наступних років. ❤️

  - key: conclusion.react2023.josh_comeau.bio
    t: Інженер програмного забезпечення та освітній діяч. Автор ["The Joy of React"](https://www.joyofreact.com/)

  ###########################################################################
  # Picks
  ###########################################################################

  - key: picks.my_pick
    t: "Мій вибір 2023: "
  - key: picks.intro
    t: Ми покликали спільноту React поділитися своїм "вибором року"

  # https://zustand-demo.pmnd.rs
  - key: picks.jack_herrington.name
    t: Zustand
  - key: picks.jack_herrington.bio
    t: Головний інженер і YouTube-відеоблогер
  - key: picks.jack_herrington.description
    t: |
      Просте, елегантне, розширюване управління станом, яке "просто працює" (ТМ). Сьогодні вам може і не потрібне управління станом, але якщо так, то Zustand — чудове місце для початку.

  # https://react.dev/reference/rsc/server-components
  - key: picks.alex_sidorenko.name
    t: Серверні компоненти React (RSC)
  - key: picks.alex_sidorenko.bio
    t: Роблю короткі відео про Next.js у Twitter
  - key: picks.alex_sidorenko.description
    t: |
      Одинадцять років тому React переосмислив веброзробку, кинувши виклик усталеним практикам. Тепер React робить це знову за допомогою RSC.

      P.S. Подяка команді Next.js за просування цього нового бачення.

  # https://youtube.com/watch?v=zqhE-CepH2g
  - key: picks.sam_selikoff.name
    t: |
      "Mind the Gap" – виступ Ryan Florence на Big Sky Dev Con 2024
  - key: picks.sam_selikoff.bio
    t: Роблю відео для розробників клієнтської частини на платформах Build UI та YouTube, співведучий подкасту "Frontend First"
  - key: picks.sam_selikoff.description
    t: |
      Ryan майстерно показує, як нові директиви React "use server" і "use client" дають змогу створювати різноманітну функціональність з обох боків мережі, використовуючи єдину парадигму. Обов'язковий для перегляду розробникам React.

  # https://www.remotion.dev/
  - key: picks.sebastien_lorber.name
    t: Remotion
  - key: picks.sebastien_lorber.bio
    t: Автор ["This Week in React"](https://thisweekinreact.com/)
  - key: picks.sebastien_lorber.description
    t: |
      Ідея створення програмованих відео в React захоплює мене донині. Remotion — це досить непоказний проєкт, який продовжує повільно, але стабільно розвиватися та успішно прийнятий сферою DevRels, викладачами, незалежними розробниками та більшими компаніями (зокрема для відеокампанії Unwrapped GitHub).

  # https://buildui.com/posts/instant-search-params-with-react-server-components
  - key: picks.aurora_scharff.name
    t: Миттєве отримання параметрів пошуку у серверних компонентах React
  - key: picks.aurora_scharff.bio
    t: Веброзробник і консультант в Inmeta
  - key: picks.aurora_scharff.description
    t: |
      У цій публікації розглядається проблема, з якою ви, ймовірно, зіткнетеся під час створення відповідної програми за допомогою App Router із Next.js — обробка параметрів пошуку. Напрочуд важко зробити взаємодію "ідеальною", і публікація закінчується рішенням — useOptimistic. Також вона навчить вас переходам (transitions) за допомогою великої кількості "пісочниць" із прикладами.

  # https://mui.com/blog/introducing-pigment-css/
  - key: picks.josh_comeau.name
    t: Pigment CSS
  - key: picks.josh_comeau.bio
    t: Інженер програмного забезпечення та освітній діяч. Автор ["The Joy of React"](https://www.joyofreact.com/)
  - key: picks.josh_comeau.description
    t: |
      Команда Material UI створює бібліотеку CSS-in-JS нового покоління, яка переносить API стилізації (styled) в епоху серверних компонентів React. Інструментів CSS-in-JS не бракує, але саме цей підпадає під всі мої критерії.

  # https://www.propelauth.com/post/nextjs-challenges
  - key: picks.carl_vitullo.name
    t: Йдеться не лише про вас — користуватися Next.js все складніше
  - key: picks.carl_vitullo.bio
    t: Індивідуальний підприємець, ведучий ["This Month in React"](https://podcasts.apple.com/us/podcast/this-month-in-react/id1661733526), лідер спільноти [Reactiflux](https://www.reactiflux.com/)
  - key: picks.carl_vitullo.description
    t: |
      Це чудовий допис у блозі! Я думаю, що у ньому дійсно відображено сьогоднішній zeitgeist (подих часу) у React та чітко сформульовано розчарування, яке кипіло в екосистемі до 2024 року.

  # https://sonner.emilkowal.ski
  - key: picks.miguel_angel_duran.name
    t: Sonner
  - key: picks.miguel_angel_duran.bio
    t: Стример програмування на платформі Twitch та автор контенту 
  - key: picks.miguel_angel_duran.description
    t: |
      Sonner — найкращий компонент немодального спливного повідомлення (toast) для React. Гарний із самого початку, із широкими можливостями налаштування та простим API для використання в будь-якому проєкті. Чудова робота від Emil.

  # https://docs.expo.dev/router/introduction/
  - key: picks.lydia_hallie.name
    t: Expo Router
  - key: picks.lydia_hallie.bio
    t: Незалежна інженерка програмного забезпечення і авторка технічного контенту
  - key: picks.lydia_hallie.description
    t: |
      Expo Router заслужив мій вибір завдяки неймовірному потенціалу у вебі та нативному середовищі. Це перший фреймворк, який використовує всю потужність React для роботи на всіх платформах, роблячи його справжнім платформонезалежним інструментом рендеру. Файлова архітектура Expo Router спрощує веброзробникам адаптацію до нативних платформ, прискорює розробку та скорочує час доставляння оновлень до всіх пристроїв.

  #
  # - key: picks.xxx.name
  #   t:
  # - key: picks.xxx.bio
  #   t:
  # - key: picks.xxx.description
  #   t: |

  ###########################################################################
  # Sponsors
  ###########################################################################

  - key: sponsors.frontendmasters.description
    t: Вдосконалюйте свої навички за допомогою поглиблених сучасних інженерних курсів.
  - key: sponsors.google_chrome.description
    t: Дякуємо команді Google Chrome за підтримку нашої роботи.
  - key: sponsors.tokyodev.description
    t: Знайдіть роботу розробника своєї мрії в Японії вже сьогодні.
  - key: sponsors.renderatl.description
    t: Технологічна конференція, присвячена всьому у вебі.

  ###########################################################################
  # FAQ/About
  ###########################################################################

  # React 2023

  - key: faq.data_used_react2023
    t: Як ці дані будуть використані?
  - key: faq.data_used_react2023.description
    t: >
      Усі зібрані дані будуть відкрито опубліковані для консультації всіх охочих. Розробники або компанії можуть використовувати їх для визначення пріоритетних напрямків розробки та формування своїх "дорожніх карт".

  - key: faq.survey_goals_react2023
    t: Яка мета цього опитування?
  - key: faq.survey_goals_react2023.description
    t: >
      Мета опитування — вимірювання впізнаваності та популярності з-поміж API React-у, а також бібліотек в екосистемі React.

  - key: faq.who_should_take_survey_react2023
    t: Хто може взяти участь у цьому опитуванні?
  - key: faq.who_should_take_survey_react2023.description
    t: >
      Це відкрите опитування для всіх, хто користується React, незалежно від того, регулярно ви це робите або час від часу, у межах своєї роботи, як студент або задля розваги!

  - key: faq.how_long_will_survey_take_react2023
    t: Скільки часу займе опитування?
  - key: faq.how_long_will_survey_take_react2023.description
    t: >
      Залежно від того, на скільки питань ви відповісте (всі питання не обов'язкові), 
      заповнення анкети повинно зайняти орієнтовно 15-20 хвилин.

  - key: faq.learn_more_react2023
    t: Де я можу дізнатися більше?
  - key: faq.learn_more_react2023.description
    t: Ви можете дізнатися більше про це опитування у [нашому анонсі](https://dev.to/sachagreif/announcing-the-first-ever-state-of-react-survey-3k6b).

  - key: faq.survey_design_react2023
    t: Як було розроблено це опитування?
  - key: faq.survey_design_react2023.description
    t: >
      Опитування було розроблено з урахуванням думки спільноти через [відкрите обговорення](https://github.com/Devographics/surveys/issues/85).

  - key: faq.results_released_react2023
    t: Коли будуть опубліковані результати?
  - key: faq.results_released_react2023.description
    t: Опитування триватиме з 27 жовтня до 15 листопада, і його результати будуть опубліковані незабаром після завершення.

  - key: about.content
    t: |
      Опитування "Стан React 2023" тривало з 27 жовтня до 15 листопада 2023 року та зібрало 13003 відповідей. Результати були опубліковані 20 липня 2024 року. Опитування проводив [Devographics](https://devographics.com/), колектив, до складу якого входять я ([Sacha Greif](https://sachagreif.com/)) і [Eric Burel](https://www.lbke.fr/), а також запрошені експерти та учасники проєктів із відкритим програмним кодом. 

      Логотип і футболку "Стан React" розробив [Christopher Kirk-Nielsen](http://chriskirknielsen.com/).

      ### Цілі опитування

      Це опитування було створено для визначення майбутніх тенденцій в екосистемі React, щоб допомогти розробникам здійснити вибір з-поміж наявних технологій.

      Так опитування зосереджено більше на передбаченні того, що станеться протягом наступних кількох років, ніж на аналізі того, що популярно саме зараз, — ось чому деякі функції чи технології іноді можуть не згадуватися попри широке впровадження.

      Його також слід сприймати як **знімок певної підмножини розробників у певний момент часу**, а не промовистий опис від імені всієї екосистеми React.

      ### Розробка опитування

      Опитування було розроблено частково на основі торішнього опитування з відкритим періодом для зворотного зв'язку, під час якого план опитування обговорювався [на платформі GitHub](https://github.com/Devographics/surveys/issues/85). 

      Усі запитання опитування були необов'язковими. 

      ### Аудиторія опитування

      Опитування було повністю відкрите та доступне онлайн, респонденти жодним чином не відфільтровувалися та не відбиралися. Респонденти складалися здебільшого з учасників минулих опитувань (сповіщених електронною поштою за спеціальним списком розсилання) та тих, хто прийшов через соціальні мережі.

      Зауважте, що фреймворки, бібліотеки тощо могли вільно заохочувати свою аудиторію до участі в опитуванні, і деякі з них скористалися цим за допомогою банерів, твітів або у інший спосіб. Детальний розподіл джерел трафіку включено в діаграму "Джерела".

      ### Фінансування проєкту

      Цей проєкт фінансується з різних джерел:

      - **Продаж футболок**.

      - **Розміщення посилань від спонсорів**: посилання на рекомендовані джерела у нижній частині кожної сторінки надає наш партнер [Frontend Masters](https://frontendmasters.com/).

      - **Пряме фінансування**: цього року [Google](https://www.google.com/) і [TokyoDev](https://www.tokyodev.com/) профінансували мою роботу над опитуванням. 

      Будь-який внесок або спонсорство дуже цінується. Особливо ми хотіли б тісніше співпрацювати з більшою кількістю постачальників браузерів, оскільки вони відіграють центральну роль в екосистемі вебу.

      ### Технічний огляд

      Більш детальний технічний огляд того, як проводяться опитування, [тут](https://dev.to/sachagreif/how-the-devographics-surveys-are-run-2023-edition-1p6a).

      **Примітка: Це *НЕ* офіційне опитування щодо React, а команда опитування ніяк не пов'язана з Meta, Vercel або командою React.**

      ### Особлива подяка

      Особлива подяка Paul McMahon, Marc Grabanski та Justin E. Samuels за їхню підтримку, що триває і досі.
